{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","components/Notification.js","helpers/helpers.js","components/Popup.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","Notification","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.660e4715.chunk.js","sourcesContent":["\nimport React from 'react'\n\nconst Header = () => {\n    return (\n        <>\n            <h1>Hangman</h1>\n            <p>Find the hidden word - Enter a letter</p>\n        </>\n    )\n}\n\nexport default Header\n\n","\nimport React from 'react'\n\nconst Figure = ({wrongLetters}) => {\n\n  const errors = wrongLetters.length;\n\n    return (\n      <svg height=\"250\" width=\"200\" className=\"figure-container\">\n\n        {/* <!-- Rod --> */}\n        <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n        <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n        <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n        <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n        {/* <!-- Head --> */}\n        {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\n        {/* <!-- Body --> */}\n        {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\n        {/* <!-- Arms --> */}\n        {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\n        {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\n        {/* <!-- Legs --> */}\n        {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\n        {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\n      </svg>\n    )\n}\n\nexport default Figure\n","\nimport React from 'react'\n\nconst WrongLetters = ({wrongLetters}) => {\n    return (\n        <div className=\"wrong-letters-container\">\n            <div>\n                {wrongLetters.length > 0 && <p>Wrong</p>}\n                {wrongLetters\n                    .map((letter, i) => <span key={i}>{letter}</span>)\n                    .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\n            </div>\n        </div>\n    )\n}\n\nexport default WrongLetters\n","\nimport React from 'react'\n\nconst Word = ({ selectedWord, correctLetters }) => {\n    return (\n        <div className=\"word\">\n            {selectedWord.split('').map( (letter, i) => {\n               return (\n                    <span className=\"letter\" key={i}>\n                        {correctLetters.includes(letter) ? letter : ''}\n                    </span>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Word\n","\nimport React from 'react'\n\nconst Notification = ({ showNotification }) => {\n    return (\n        <div className={`notification-container ${showNotification ? 'show' : ''}`}>\n            <p>You have already entered this letter</p>\n         </div>\n    )\n}\n\nexport default Notification\n","\nexport function showNotification(setter) {\n    setter(true);\n    setTimeout(()=>{\n        setter(false)\n    }, 2000)\n}\n\nexport function checkWin (correct, wrong, word) {\n    let status = 'win';\n\n    //check for win\n    word.split('').forEach(letter => {\n        if (!correct.includes(letter)){\n            status = '';\n        }\n    });\n\n    //check for loss\n    if (wrong.length === 6) status = 'lose'\n    \n    return status;\n\n}","\nimport React, {useEffect} from 'react';\nimport { checkWin } from '../helpers/helpers';\n\nconst Popup = ({ correctLetters, wrongLetters, selectedWord, setPlayable, playAgain }) => {\n\n    let finalMessage = '';\n    let finalMessageRevealWord = '';\n    let playable = true;\n\n    if(checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\n        finalMessage = 'Congratulations! You won!';\n        playable = false;\n    } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose') {\n        finalMessage = 'Unfortunately you lost :('\n        finalMessageRevealWord = `the word was: ${selectedWord}`;\n        playable = false;\n    }\n\n    useEffect(() => setPlayable(playable));\n\n    return (\n        <div className=\"popup-container\" style={finalMessage !== '' ? {display: 'flex'} : {}}>\n            <div className=\"popup\">\n                <h2>{finalMessage}</h2>\n                <h3>{finalMessageRevealWord}</h3>\n                <button onClick={playAgain}>Play Again</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Notification from './components/Notification'\nimport Popup from './components/Popup'\nimport { showNotification as show } from './helpers/helpers';\n\n\n//starting off with array of words and then selecting one of the words\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\n\nfunction App() {\n\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState ([]);\n  const [wrongLetters, setWrongLetters] = useState ([]);\n  const [showNotification, setShowNotification] = useState (false);\n\n  useEffect(() => {\n\n    const handleKeydown = event => {\n      const { key, keyCode } = event;\n\n        // check if its a letter key\n        if (playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n    \n          if (selectedWord.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n              setCorrectLetters(currentLetters => [...currentLetters, letter]);\n            } else {\n                show(setShowNotification);\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          }\n        }\n    }\n\n    window.addEventListener('keydown', handleKeydown)\n\n    return () => window.removeEventListener('keydown', handleKeydown)\n\n\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain () {\n    setPlayable(true);\n\n    //empty arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n \n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters}/>\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters}/>\n      </div>\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} \n      selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}/>\n      <Notification showNotification={showNotification}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}