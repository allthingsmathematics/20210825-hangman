{"ast":null,"code":"import _toConsumableArray from\"/Users/patricksobczak/Desktop/2021/Computer Science/20210825 - Project 18 - Hangman game copy (FINAL)/20210822-project18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/patricksobczak/Desktop/2021/Computer Science/20210825 - Project 18 - Hangman game copy (FINAL)/20210822-project18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./App.css';import Header from'./components/Header';import Figure from'./components/Figure';import WrongLetters from'./components/WrongLetters';import Word from'./components/Word';import Notification from'./components/Notification';import Popup from'./components/Popup';import{showNotification as show}from'./helpers/helpers';//starting off with array of words and then selecting one of the words\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var words=['application','programming','interface','wizard'];var selectedWord=words[Math.floor(Math.random()*words.length)];function App(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),playable=_useState2[0],setPlayable=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),correctLetters=_useState4[0],setCorrectLetters=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),wrongLetters=_useState6[0],setWrongLetters=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showNotification=_useState8[0],setShowNotification=_useState8[1];useEffect(function(){var handleKeydown=function handleKeydown(event){var key=event.key,keyCode=event.keyCode;// check if its a letter key\nif(playable&&keyCode>=65&&keyCode<=90){var letter=key.toLowerCase();if(selectedWord.includes(letter)){if(!correctLetters.includes(letter)){setCorrectLetters(function(currentLetters){return[].concat(_toConsumableArray(currentLetters),[letter]);});}else{show(setShowNotification);}}else{if(!wrongLetters.includes(letter)){setWrongLetters(function(wrongLetters){return[].concat(_toConsumableArray(wrongLetters),[letter]);});}else{show(setShowNotification);}}}};window.addEventListener('keydown',handleKeydown);return function(){return window.removeEventListener('keydown',handleKeydown);};},[correctLetters,wrongLetters,playable]);function playAgain(){setPlayable(true);//empty arrays\nsetCorrectLetters([]);setWrongLetters([]);var random=Math.floor(Math.random()*words.length);selectedWord=words[random];}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsx(Figure,{wrongLetters:wrongLetters}),/*#__PURE__*/_jsx(WrongLetters,{wrongLetters:wrongLetters}),/*#__PURE__*/_jsx(Word,{selectedWord:selectedWord,correctLetters:correctLetters})]}),/*#__PURE__*/_jsx(Popup,{correctLetters:correctLetters,wrongLetters:wrongLetters,selectedWord:selectedWord,setPlayable:setPlayable,playAgain:playAgain}),/*#__PURE__*/_jsx(Notification,{showNotification:showNotification})]});}export default App;","map":{"version":3,"sources":["/Users/patricksobczak/Desktop/2021/Computer Science/20210825 - Project 18 - Hangman game copy (FINAL)/20210822-project18/src/App.js"],"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","Notification","Popup","showNotification","show","words","selectedWord","Math","floor","random","length","App","playable","setPlayable","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playAgain"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Notification from './components/Notification'\nimport Popup from './components/Popup'\nimport { showNotification as show } from './helpers/helpers';\n\n\n//starting off with array of words and then selecting one of the words\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\n\nfunction App() {\n\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState ([]);\n  const [wrongLetters, setWrongLetters] = useState ([]);\n  const [showNotification, setShowNotification] = useState (false);\n\n  useEffect(() => {\n\n    const handleKeydown = event => {\n      const { key, keyCode } = event;\n\n        // check if its a letter key\n        if (playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n    \n          if (selectedWord.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n              setCorrectLetters(currentLetters => [...currentLetters, letter]);\n            } else {\n                show(setShowNotification);\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          }\n        }\n    }\n\n    window.addEventListener('keydown', handleKeydown)\n\n    return () => window.removeEventListener('keydown', handleKeydown)\n\n\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain () {\n    setPlayable(true);\n\n    //empty arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n \n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters}/>\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters}/>\n      </div>\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} \n      selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}/>\n      <Notification showNotification={showNotification}/>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}